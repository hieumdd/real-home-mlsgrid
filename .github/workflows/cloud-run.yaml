name: Cloud Run

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency: ${{ github.ref }}

env:
  NAME: real-home-data-backend
  PROJECT_ID: real-data-now
  REGION: us-central1
  GCP_SA: etl-181@real-data-now.iam.gserviceaccount.com
  ENV_KEY: env-vars
  ENV_FILE: env.yaml

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-outputs.outputs.image }}
      svc-name: ${{ steps.set-outputs.outputs.svc-name }}
    steps:
      - if: github.ref_name == 'dev'
        run: |
          echo "SERVICE_NAME=${{ env.NAME}}-${{ github.ref_name }}" >> $GITHUB_ENV

      - if: github.ref_name == 'master'
        run: |
          echo "SERVICE_NAME=${{ env.NAME}}" >> $GITHUB_ENV

      - id: set-outputs
        run: |
          echo "::set-output name=image::us-docker.pkg.dev/${{ env.PROJECT_ID }}/gcr.io/${{ env.NAME }}:${{ github.ref_name }}"
          echo "::set-output name=svc-name::${{ env.SERVICE_NAME }}"

      - run: |
          echo "PG_DB: ${{ secrets.PG_DB }}" >> ${{ env.ENV_FILE }}
          echo "PG_USER: ${{ secrets.PG_USER }}" >> ${{ env.ENV_FILE }}
          echo "PG_PASSWORD: ${{ secrets.PG_PASSWORD }}" >> ${{ env.ENV_FILE }}
          echo "PG_HOST: ${{ secrets.PG_HOST }}" >> ${{ env.ENV_FILE }}

          echo "JWT_SECRET: ${{ secrets.JWT_SECRET }}" >> ${{ env.ENV_FILE }}
          echo "JWT_EXPIRATION_TIME: ${{ secrets.JWT_EXPIRATION_TIME }}" >> ${{ env.ENV_FILE }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ENV_KEY }}
          path: ${{ env.ENV_FILE }}

  build:
    runs-on: ubuntu-latest
    needs: set-env
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - uses: docker/setup-buildx-action@v2
        with:
          install: true

      - uses: google-github-actions/setup-gcloud@v0

      - run: gcloud auth configure-docker us-docker.pkg.dev

      - uses: satackey/action-docker-layer-caching@v0.0.11

      - run: docker build --push -t ${{ needs.set-env.outputs.image }} .

  deploy:
    runs-on: ubuntu-latest
    needs:
      - set-env
      - build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.ENV_KEY }}

      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - uses: google-github-actions/setup-gcloud@v0

      - run: >-
          gcloud run deploy ${{ needs.set-env.outputs.svc-name }}
          --image=${{ needs.set-env.outputs.image }}
          --concurrency=80
          --min-instances=2
          --memory=4Gi
          --cpu=2
          --platform=managed
          --service-account=${{ env.GCP_SA }}
          --region=${{ env.REGION }}
          --timeout=60
          --env-vars-file=${{ env.ENV_FILE }}
          --allow-unauthenticated

  clean-up:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - run: echo "" > ${{ env.ENV_FILE }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ENV_KEY }}
          path: ${{ env.ENV_FILE }}
